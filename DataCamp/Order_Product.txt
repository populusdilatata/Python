class Product:
    inventory=[]
    
    def __init__(self, product_id, name, category, quantity, price, supplier):
            self.product_id=product_id
            self.name=name
            self.category=category
            self.quantity=quantity
            self.price=price
            self.supplier=supplier
    
    @classmethod   
    def add_product(cls, name, category, quantity, price, supplier):
        # Generate a new product ID by counting existing products and adding 1, avoiding the creation of duplicate product_ids
        product_id = cls.inventory[-1].product_id + 1 if len(cls.inventory) > 0 else 1
        # Create a new product instance
        new_product = cls(product_id, name, category, quantity, price, supplier)
        return "Product added successfully."
    
    @classmethod 
    def update_product(cls, product_id, quantity=None, price=None, supplier=None):
        for product in cls.inventory:
            if product.product_id == product_id:
                if price is not None:
                    product.price = price
                    
                if quantity is not None:
                    product.quantity = quantity
                
                if supplier is not None:
                    product.supplier = supplier
            return "Product not found"
    @classmethod     
    def delete_product(cls, product_id):
        for i, product in enumerate(cls.inventory):
            if product.product_id == product_id:
                del cls.inventory[i]
                return "Product deleted successfully"
            
            return "Product not found"

class Order:
    def __init__(self, order_id, products, customer_info=None):
            self.order_id=order_id
            self.products=products
            self.customer_info=customer_info
    @classmethod     
    def place_order(self, product_id, quantity, customer_info=None):
        for product in Product.inventory :
            if (product.product_id == product_id and product.quantity >= quantity):
                product.quantity -= quantity
                self.products.append((product_id, quantity))
            	if customer_info:
                self.customer_info = customer_info
                    
                return f"Order placed successfully. Order ID: {self.order_id}"
        
        return "Order could not be placed. Product not found or insufficient quantity."
